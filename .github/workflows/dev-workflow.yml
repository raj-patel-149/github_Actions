name: Feature PR â†’ Dev Branch Checks

on:
  pull_request:
    branches: [dev]

jobs:
  ####################################
  # Job 1: Code Quality Checks
  ####################################
  code-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run ESLint
        run: npx eslint .

      - name: Run PMD for Apex
        run: |
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.55.0/pmd-bin-6.55.0.zip
          unzip pmd-bin-6.55.0.zip
          ./pmd-bin-6.55.0/bin/run.sh pmd -d force-app -R category/apex/design.xml -f text

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=raj-patel-149_github_Actions \
            -Dsonar.organization=raj-patel-149 \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${SONAR_TOKEN}

  deploy-to-uat:
    runs-on: ubuntu-latest
    needs: code-checks

    steps:
      - name: Checkout code (last 2 commits only)
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Salesforce CLI
        run: |
          npm install --global @salesforce/cli
          sf --version || true

      - name: Create JWT Key File
        run: echo "${{ secrets.SF_JWT_KEY }}" > server.key

      - name: Authenticate to Salesforce
        run: |
          echo "Logging in with JWT..."
          if ! sf org login jwt \
            --client-id ${{ secrets.SF_CLIENT_ID }} \
            --jwt-key-file server.key \
            --username ${{ secrets.SF_USERNAME_QA }} \
            --alias QA \
            --instance-url https://login.salesforce.com; then
            echo "sf CLI failed, falling back to sfdx..."
            sfdx auth:jwt:grant \
              --clientid ${{ secrets.SF_CLIENT_ID }} \
              --jwtkeyfile server.key \
              --username ${{ secrets.SF_USERNAME_QA }} \
              --instanceurl https://login.salesforce.com \
              --setalias QA
          fi

      - name: Detect changed files
        id: changes
        run: |
          git diff --name-only HEAD^ HEAD | grep "^force-app" > changed-files.     true
          CHANGED_FILES=$(cat changed-files.txt | xargs)
          echo "Changed files: $CHANGED_FILES"
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Copy changed files to temp deploy folder
        if: steps.changes.outputs.changed_files != ''
        run: |
          mkdir -p changed
          while read file; do
            mkdir -p "changed/$(dirname "$file")"
            cp "$file" "changed/$file"
          done < changed-files.txt

      - name: Deploy changed files
        if: steps.changes.outputs.changed_files != ''
        run: |
          echo "Deploying changed files..."
          sf project deploy start \
            --source-dir changed/force-app \
            --target-org QA \
            --ignore-conflicts \
            --wait 10
